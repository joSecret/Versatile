!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("./util/index"),require("./tooltip")):"function"==typeof define&&define.amd?define(["./util/index","./tooltip"],factory):(global="undefined"!=typeof globalThis?globalThis:global||self).Popover=factory(global.Index,global.Tooltip)}(this,function(index,Tooltip){"use strict";var _interopDefaultLegacy,Tooltip=(e=>e&&"object"==typeof e&&"default"in e?e:{default:e})(Tooltip);const NAME="popover",SELECTOR_TITLE=".popover-header",SELECTOR_CONTENT=".popover-body",Default={...Tooltip.default.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},DefaultType={...Tooltip.default.DefaultType,content:"(null|string|element|function)"};class Popover extends Tooltip.default{static get Default(){return Default}static get DefaultType(){return DefaultType}static get NAME(){return NAME}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(config){return this.each(function(){var data=Popover.getOrCreateInstance(this,config);if("string"==typeof config){if(void 0===data[config])throw new TypeError(`No method named "${config}"`);data[config]()}})}}return index.defineJQueryPlugin(Popover),Popover});