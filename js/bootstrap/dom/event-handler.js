!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("../util/index")):"function"==typeof define&&define.amd?define(["../util/index"],factory):(global="undefined"!=typeof globalThis?globalThis:global||self).EventHandler=factory(global.Index)}(this,function(index){"use strict";const namespaceRegex=/[^.]*(?=\..*)\.|.*/,stripNameRegex=/\..*/,stripUidRegex=/::\d+$/,eventRegistry={};let uidEvent=1;const customEvents={mouseenter:"mouseover",mouseleave:"mouseout"},nativeEvents=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function makeEventUid(element,uid){return uid&&uid+"::"+uidEvent++||element.uidEvent||uidEvent++}function getElementEvents(element){var uid=makeEventUid(element);return element.uidEvent=uid,eventRegistry[uid]=eventRegistry[uid]||{},eventRegistry[uid]}function bootstrapHandler(element,fn){return function handler(event){return hydrateObj(event,{delegateTarget:element}),handler.oneOff&&EventHandler.off(element,event.type,fn),fn.apply(element,[event])}}function bootstrapDelegationHandler(element,selector,fn){return function handler(event){var domElements=element.querySelectorAll(selector);for(let{target}=event;target&&target!==this;target=target.parentNode)for(const domElement of domElements)if(domElement===target)return hydrateObj(event,{delegateTarget:target}),handler.oneOff&&EventHandler.off(element,event.type,selector,fn),fn.apply(target,[event])}}function findHandler(events,callable,delegationSelector=null){return Object.values(events).find(event=>event.callable===callable&&event.delegationSelector===delegationSelector)}function normalizeParameters(originalTypeEvent,handler,delegationFunction){var isDelegated="string"==typeof handler,handler=!isDelegated&&handler||delegationFunction;let typeEvent=getTypeEvent(originalTypeEvent);return[isDelegated,handler,typeEvent=nativeEvents.has(typeEvent)?typeEvent:originalTypeEvent]}function addHandler(element,originalTypeEvent,handler,delegationFunction,oneOff){if("string"==typeof originalTypeEvent&&element){let[isDelegated,callable,typeEvent]=normalizeParameters(originalTypeEvent,handler,delegationFunction);var wrapFunction,delegationFunction=(originalTypeEvent in customEvents&&(callable=(fn=>function(event){if(!event.relatedTarget||event.relatedTarget!==event.delegateTarget&&!event.delegateTarget.contains(event.relatedTarget))return fn.call(this,event)})(callable)),getElementEvents(element)),delegationFunction=delegationFunction[typeEvent]||(delegationFunction[typeEvent]={}),previousFunction=findHandler(delegationFunction,callable,isDelegated?handler:null),previousFunction,originalTypeEvent;previousFunction?previousFunction.oneOff=previousFunction.oneOff&&oneOff:(previousFunction=makeEventUid(callable,originalTypeEvent.replace(namespaceRegex,"")),(originalTypeEvent=isDelegated?bootstrapDelegationHandler(element,handler,callable):bootstrapHandler(element,callable)).delegationSelector=isDelegated?handler:null,originalTypeEvent.callable=callable,originalTypeEvent.oneOff=oneOff,delegationFunction[originalTypeEvent.uidEvent=previousFunction]=originalTypeEvent,element.addEventListener(typeEvent,originalTypeEvent,isDelegated))}}function removeHandler(element,events,typeEvent,handler,delegationSelector){var handler=findHandler(events[typeEvent],handler,delegationSelector);handler&&(element.removeEventListener(typeEvent,handler,Boolean(delegationSelector)),delete events[typeEvent][handler.uidEvent])}function removeNamespacedHandlers(element,events,typeEvent,namespace){var storeElementEvent=events[typeEvent]||{},event;for(const handlerKey of Object.keys(storeElementEvent)){handlerKey.includes(namespace)&&removeHandler(element,events,typeEvent,(event=storeElementEvent[handlerKey]).callable,event.delegationSelector)}}function getTypeEvent(event){return event=event.replace(stripNameRegex,""),customEvents[event]||event}const EventHandler={on(element,event,handler,delegationFunction){addHandler(element,event,handler,delegationFunction,!1)},one(element,event,handler,delegationFunction){addHandler(element,event,handler,delegationFunction,!0)},off(element,originalTypeEvent,handler,delegationFunction){if("string"==typeof originalTypeEvent&&element){var[delegationFunction,callable,typeEvent]=normalizeParameters(originalTypeEvent,handler,delegationFunction),inNamespace=typeEvent!==originalTypeEvent,events=getElementEvents(element),storeElementEvent=events[typeEvent]||{},isNamespace=originalTypeEvent.startsWith(".");if(void 0!==callable)return Object.keys(storeElementEvent).length?void removeHandler(element,events,typeEvent,callable,delegationFunction?handler:null):void 0;if(isNamespace)for(const elementEvent of Object.keys(events))removeNamespacedHandlers(element,events,elementEvent,originalTypeEvent.slice(1));for(const keyHandlers of Object.keys(storeElementEvent)){var handlerKey=keyHandlers.replace(stripUidRegex,""),handlerKey;inNamespace&&!originalTypeEvent.includes(handlerKey)||removeHandler(element,events,typeEvent,(handlerKey=storeElementEvent[keyHandlers]).callable,handlerKey.delegationSelector)}}},trigger(element,event,args){if("string"!=typeof event||!element)return null;var $=index.getjQuery(),typeEvent,inNamespace;let jQueryEvent=null,bubbles=!0,nativeDispatch=!0,defaultPrevented=!1;event!==getTypeEvent(event)&&$&&(jQueryEvent=$.Event(event,args),$(element).trigger(jQueryEvent),bubbles=!jQueryEvent.isPropagationStopped(),nativeDispatch=!jQueryEvent.isImmediatePropagationStopped(),defaultPrevented=jQueryEvent.isDefaultPrevented());var $,$=hydrateObj($=new Event(event,{bubbles:bubbles,cancelable:!0}),args);return defaultPrevented&&$.preventDefault(),nativeDispatch&&element.dispatchEvent($),$.defaultPrevented&&jQueryEvent&&jQueryEvent.preventDefault(),$}};function hydrateObj(obj,meta){for(const[key,value]of Object.entries(meta||{}))try{obj[key]=value}catch(_unused){Object.defineProperty(obj,key,{configurable:!0,get(){return value}})}return obj}return EventHandler});