!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):(global="undefined"!=typeof globalThis?globalThis:global||self).Manipulator=factory()}(this,function(){"use strict";function normalizeData(value){if("true"===value)return!0;if("false"===value)return!1;if(value===Number(value).toString())return Number(value);if(""===value||"null"===value)return null;if("string"!=typeof value)return value;try{return JSON.parse(decodeURIComponent(value))}catch(_unused){return value}}function normalizeDataKey(key){return key.replace(/[A-Z]/g,chr=>"-"+chr.toLowerCase())}var Manipulator;return{setDataAttribute(element,key,value){element.setAttribute("data-bs-"+normalizeDataKey(key),value)},removeDataAttribute(element,key){element.removeAttribute("data-bs-"+normalizeDataKey(key))},getDataAttributes(element){if(!element)return{};var attributes={},bsKeys=Object.keys(element.dataset).filter(key=>key.startsWith("bs")&&!key.startsWith("bsConfig"));for(const key of bsKeys){let pureKey=key.replace(/^bs/,"");attributes[pureKey=pureKey.charAt(0).toLowerCase()+pureKey.slice(1,pureKey.length)]=normalizeData(element.dataset[key])}return attributes},getDataAttribute(element,key){return normalizeData(element.getAttribute("data-bs-"+normalizeDataKey(key)))}}});