!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):(global="undefined"!=typeof globalThis?globalThis:global||self).Data=factory()}(this,function(){"use strict";const elementMap=new Map;var data;return{set(element,key,instance){elementMap.has(element)||elementMap.set(element,new Map);var element=elementMap.get(element);element.has(key)||0===element.size?element.set(key,instance):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(element.keys())[0]}.`)},get(element,key){return elementMap.has(element)&&elementMap.get(element).get(key)||null},remove(element,key){var instanceMap;elementMap.has(element)&&((instanceMap=elementMap.get(element)).delete(key),0===instanceMap.size)&&elementMap.delete(element)}}});