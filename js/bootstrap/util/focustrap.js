!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("../dom/event-handler"),require("../dom/selector-engine"),require("./config")):"function"==typeof define&&define.amd?define(["../dom/event-handler","../dom/selector-engine","./config"],factory):(global="undefined"!=typeof globalThis?globalThis:global||self).Focustrap=factory(global.EventHandler,global.SelectorEngine,global.Config)}(this,function(EventHandler,SelectorEngine,Config){"use strict";var _interopDefaultLegacy=e=>e&&"object"==typeof e&&"default"in e?e:{default:e},Config__default,DATA_KEY;const EventHandler__default=_interopDefaultLegacy(EventHandler),SelectorEngine__default=_interopDefaultLegacy(SelectorEngine),NAME="focustrap",EVENT_KEY="."+"bs.focustrap",EVENT_FOCUSIN="focusin"+EVENT_KEY,EVENT_KEYDOWN_TAB="keydown.tab"+EVENT_KEY,TAB_KEY="Tab",TAB_NAV_FORWARD="forward",TAB_NAV_BACKWARD="backward",Default={autofocus:!0,trapElement:null},DefaultType={autofocus:"boolean",trapElement:"element"};class FocusTrap extends _interopDefaultLegacy(Config).default{constructor(config){super(),this._config=this._getConfig(config),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Default}static get DefaultType(){return DefaultType}static get NAME(){return NAME}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),EventHandler__default.default.off(document,EVENT_KEY),EventHandler__default.default.on(document,EVENT_FOCUSIN,event=>this._handleFocusin(event)),EventHandler__default.default.on(document,EVENT_KEYDOWN_TAB,event=>this._handleKeydown(event)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,EventHandler__default.default.off(document,EVENT_KEY))}_handleFocusin(event){var{trapElement}=this._config,event;event.target===document||event.target===trapElement||trapElement.contains(event.target)||(0===(event=SelectorEngine__default.default.focusableChildren(trapElement)).length?trapElement:"backward"===this._lastTabNavDirection?event[event.length-1]:event[0]).focus()}_handleKeydown(event){"Tab"===event.key&&(this._lastTabNavDirection=event.shiftKey?"backward":"forward")}}return FocusTrap});