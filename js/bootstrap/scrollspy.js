!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?module.exports=factory(require("./util/index"),require("./dom/event-handler"),require("./dom/selector-engine"),require("./base-component")):"function"==typeof define&&define.amd?define(["./util/index","./dom/event-handler","./dom/selector-engine","./base-component"],factory):(global="undefined"!=typeof globalThis?globalThis:global||self).Scrollspy=factory(global.Index,global.EventHandler,global.SelectorEngine,global.BaseComponent)}(this,function(index,EventHandler,SelectorEngine,BaseComponent){"use strict";var _interopDefaultLegacy=e=>e&&"object"==typeof e&&"default"in e?e:{default:e},BaseComponent__default;const EventHandler__default=_interopDefaultLegacy(EventHandler),SelectorEngine__default=_interopDefaultLegacy(SelectorEngine),NAME="scrollspy";var DATA_KEY,EventHandler="."+"bs.scrollspy",DATA_API_KEY=".data-api",EVENT_LOAD_DATA_API;const EVENT_ACTIVATE="activate"+EventHandler,EVENT_CLICK="click"+EventHandler,CLASS_NAME_DROPDOWN_ITEM="dropdown-item",CLASS_NAME_ACTIVE="active",SELECTOR_DATA_SPY='[data-bs-spy="scroll"]',SELECTOR_TARGET_LINKS="[href]",SELECTOR_NAV_LIST_GROUP=".nav, .list-group";var SELECTOR_NAV_LINKS=".nav-link",SELECTOR_NAV_ITEMS=".nav-item",SELECTOR_LIST_ITEMS=".list-group-item";const SELECTOR_LINK_ITEMS=".nav-link, .nav-item > .nav-link, .list-group-item",SELECTOR_DROPDOWN=".dropdown",SELECTOR_DROPDOWN_TOGGLE=".dropdown-toggle",Default={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},DefaultType={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class ScrollSpy extends _interopDefaultLegacy(BaseComponent).default{constructor(element,config){super(element,config),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Default}static get DefaultType(){return DefaultType}static get NAME(){return NAME}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const section of this._observableSections.values())this._observer.observe(section)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(config){return config.target=index.getElement(config.target)||document.body,config.rootMargin=config.offset?config.offset+"px 0px -30%":config.rootMargin,"string"==typeof config.threshold&&(config.threshold=config.threshold.split(",").map(value=>Number.parseFloat(value))),config}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(EventHandler__default.default.off(this._config.target,EVENT_CLICK),EventHandler__default.default.on(this._config.target,EVENT_CLICK,"[href]",event=>{var observableSection=this._observableSections.get(event.target.hash),event,observableSection;observableSection&&(event.preventDefault(),event=this._rootElement||window,observableSection=observableSection.offsetTop-this._element.offsetTop,event.scrollTo?event.scrollTo({top:observableSection,behavior:"smooth"}):event.scrollTop=observableSection)}))}_getNewObserver(){var options={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(entries=>this._observerCallback(entries),options)}_observerCallback(entries){const targetElement=entry=>this._targetLinks.get("#"+entry.target.id);var activate=entry=>{this._previousScrollData.visibleEntryTop=entry.target.offsetTop,this._process(targetElement(entry))},parentScrollTop=(this._rootElement||document.documentElement).scrollTop,userScrollsDown=parentScrollTop>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=parentScrollTop;for(const entry of entries)if(entry.isIntersecting){var entryIsLowerThanPrevious=entry.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(userScrollsDown&&entryIsLowerThanPrevious){if(activate(entry),parentScrollTop)continue;return}userScrollsDown||entryIsLowerThanPrevious||activate(entry)}else this._activeTarget=null,this._clearActiveClass(targetElement(entry))}_initializeTargetsAndObservables(){var targetLinks,observableSection;this._targetLinks=new Map,this._observableSections=new Map;for(const anchor of SelectorEngine__default.default.find("[href]",this._config.target)){anchor.hash&&!index.isDisabled(anchor)&&(observableSection=SelectorEngine__default.default.findOne(anchor.hash,this._element),index.isVisible(observableSection))&&(this._targetLinks.set(anchor.hash,anchor),this._observableSections.set(anchor.hash,observableSection))}}_process(target){this._activeTarget!==target&&(this._clearActiveClass(this._config.target),(this._activeTarget=target).classList.add("active"),this._activateParents(target),EventHandler__default.default.trigger(this._element,EVENT_ACTIVATE,{relatedTarget:target}))}_activateParents(target){if(target.classList.contains("dropdown-item"))SelectorEngine__default.default.findOne(".dropdown-toggle",target.closest(".dropdown")).classList.add("active");else for(const listGroup of SelectorEngine__default.default.parents(target,".nav, .list-group"))for(const item of SelectorEngine__default.default.prev(listGroup,SELECTOR_LINK_ITEMS))item.classList.add("active")}_clearActiveClass(parent){var activeNodes;parent.classList.remove("active");for(const node of SelectorEngine__default.default.find("[href].active",parent))node.classList.remove("active")}static jQueryInterface(config){return this.each(function(){var data=ScrollSpy.getOrCreateInstance(this,config);if("string"==typeof config){if(void 0===data[config]||config.startsWith("_")||"constructor"===config)throw new TypeError(`No method named "${config}"`);data[config]()}})}}return EventHandler__default.default.on(window,`load${EventHandler}.data-api`,()=>{for(const spy of SelectorEngine__default.default.find(SELECTOR_DATA_SPY))ScrollSpy.getOrCreateInstance(spy)}),index.defineJQueryPlugin(ScrollSpy),ScrollSpy});